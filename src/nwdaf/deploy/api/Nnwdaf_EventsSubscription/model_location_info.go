/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LocationInfo struct for LocationInfo
type LocationInfo struct {
	Loc map[string]interface{} `json:"loc"`
	Ratio *map[string]interface{} `json:"ratio,omitempty"`
	Confidence *map[string]interface{} `json:"confidence,omitempty"`
}

// NewLocationInfo instantiates a new LocationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationInfo(loc map[string]interface{}, ) *LocationInfo {
	this := LocationInfo{}
	this.Loc = loc
	return &this
}

// NewLocationInfoWithDefaults instantiates a new LocationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationInfoWithDefaults() *LocationInfo {
	this := LocationInfo{}
	return &this
}

// GetLoc returns the Loc field value
func (o *LocationInfo) GetLoc() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}

	return o.Loc
}

// GetLocOk returns a tuple with the Loc field value
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetLocOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Loc, true
}

// SetLoc sets field value
func (o *LocationInfo) SetLoc(v map[string]interface{}) {
	o.Loc = v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *LocationInfo) GetRatio() map[string]interface{} {
	if o == nil || o.Ratio == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetRatioOk() (*map[string]interface{}, bool) {
	if o == nil || o.Ratio == nil {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *LocationInfo) HasRatio() bool {
	if o != nil && o.Ratio != nil {
		return true
	}

	return false
}

// SetRatio gets a reference to the given map[string]interface{} and assigns it to the Ratio field.
func (o *LocationInfo) SetRatio(v map[string]interface{}) {
	o.Ratio = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *LocationInfo) GetConfidence() map[string]interface{} {
	if o == nil || o.Confidence == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationInfo) GetConfidenceOk() (*map[string]interface{}, bool) {
	if o == nil || o.Confidence == nil {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *LocationInfo) HasConfidence() bool {
	if o != nil && o.Confidence != nil {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given map[string]interface{} and assigns it to the Confidence field.
func (o *LocationInfo) SetConfidence(v map[string]interface{}) {
	o.Confidence = &v
}

func (o LocationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["loc"] = o.Loc
	}
	if o.Ratio != nil {
		toSerialize["ratio"] = o.Ratio
	}
	if o.Confidence != nil {
		toSerialize["confidence"] = o.Confidence
	}
	return json.Marshal(toSerialize)
}

type NullableLocationInfo struct {
	value *LocationInfo
	isSet bool
}

func (v NullableLocationInfo) Get() *LocationInfo {
	return v.value
}

func (v *NullableLocationInfo) Set(val *LocationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationInfo(val *LocationInfo) *NullableLocationInfo {
	return &NullableLocationInfo{value: val, isSet: true}
}

func (v NullableLocationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


