/*
 * Nnwdaf_EventsSubscription
 *
 * Nnwdaf_EventsSubscription Service API. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventReportingRequirement struct for EventReportingRequirement
type EventReportingRequirement struct {
	Accuracy *Accuracy `json:"accuracy,omitempty"`
	StartTs *map[string]interface{} `json:"startTs,omitempty"`
	EndTs *map[string]interface{} `json:"endTs,omitempty"`
	SampRatio *map[string]interface{} `json:"sampRatio,omitempty"`
	MaxObjectNbr *map[string]interface{} `json:"maxObjectNbr,omitempty"`
	MaxSupiNbr *map[string]interface{} `json:"maxSupiNbr,omitempty"`
	TimeAnaNeeded *map[string]interface{} `json:"timeAnaNeeded,omitempty"`
}

// NewEventReportingRequirement instantiates a new EventReportingRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventReportingRequirement() *EventReportingRequirement {
	this := EventReportingRequirement{}
	return &this
}

// NewEventReportingRequirementWithDefaults instantiates a new EventReportingRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventReportingRequirementWithDefaults() *EventReportingRequirement {
	this := EventReportingRequirement{}
	return &this
}

// GetAccuracy returns the Accuracy field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetAccuracy() Accuracy {
	if o == nil || o.Accuracy == nil {
		var ret Accuracy
		return ret
	}
	return *o.Accuracy
}

// GetAccuracyOk returns a tuple with the Accuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetAccuracyOk() (*Accuracy, bool) {
	if o == nil || o.Accuracy == nil {
		return nil, false
	}
	return o.Accuracy, true
}

// HasAccuracy returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasAccuracy() bool {
	if o != nil && o.Accuracy != nil {
		return true
	}

	return false
}

// SetAccuracy gets a reference to the given Accuracy and assigns it to the Accuracy field.
func (o *EventReportingRequirement) SetAccuracy(v Accuracy) {
	o.Accuracy = &v
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetStartTs() map[string]interface{} {
	if o == nil || o.StartTs == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetStartTsOk() (*map[string]interface{}, bool) {
	if o == nil || o.StartTs == nil {
		return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasStartTs() bool {
	if o != nil && o.StartTs != nil {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given map[string]interface{} and assigns it to the StartTs field.
func (o *EventReportingRequirement) SetStartTs(v map[string]interface{}) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetEndTs() map[string]interface{} {
	if o == nil || o.EndTs == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetEndTsOk() (*map[string]interface{}, bool) {
	if o == nil || o.EndTs == nil {
		return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasEndTs() bool {
	if o != nil && o.EndTs != nil {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given map[string]interface{} and assigns it to the EndTs field.
func (o *EventReportingRequirement) SetEndTs(v map[string]interface{}) {
	o.EndTs = &v
}

// GetSampRatio returns the SampRatio field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetSampRatio() map[string]interface{} {
	if o == nil || o.SampRatio == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.SampRatio
}

// GetSampRatioOk returns a tuple with the SampRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetSampRatioOk() (*map[string]interface{}, bool) {
	if o == nil || o.SampRatio == nil {
		return nil, false
	}
	return o.SampRatio, true
}

// HasSampRatio returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasSampRatio() bool {
	if o != nil && o.SampRatio != nil {
		return true
	}

	return false
}

// SetSampRatio gets a reference to the given map[string]interface{} and assigns it to the SampRatio field.
func (o *EventReportingRequirement) SetSampRatio(v map[string]interface{}) {
	o.SampRatio = &v
}

// GetMaxObjectNbr returns the MaxObjectNbr field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetMaxObjectNbr() map[string]interface{} {
	if o == nil || o.MaxObjectNbr == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MaxObjectNbr
}

// GetMaxObjectNbrOk returns a tuple with the MaxObjectNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetMaxObjectNbrOk() (*map[string]interface{}, bool) {
	if o == nil || o.MaxObjectNbr == nil {
		return nil, false
	}
	return o.MaxObjectNbr, true
}

// HasMaxObjectNbr returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasMaxObjectNbr() bool {
	if o != nil && o.MaxObjectNbr != nil {
		return true
	}

	return false
}

// SetMaxObjectNbr gets a reference to the given map[string]interface{} and assigns it to the MaxObjectNbr field.
func (o *EventReportingRequirement) SetMaxObjectNbr(v map[string]interface{}) {
	o.MaxObjectNbr = &v
}

// GetMaxSupiNbr returns the MaxSupiNbr field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetMaxSupiNbr() map[string]interface{} {
	if o == nil || o.MaxSupiNbr == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MaxSupiNbr
}

// GetMaxSupiNbrOk returns a tuple with the MaxSupiNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetMaxSupiNbrOk() (*map[string]interface{}, bool) {
	if o == nil || o.MaxSupiNbr == nil {
		return nil, false
	}
	return o.MaxSupiNbr, true
}

// HasMaxSupiNbr returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasMaxSupiNbr() bool {
	if o != nil && o.MaxSupiNbr != nil {
		return true
	}

	return false
}

// SetMaxSupiNbr gets a reference to the given map[string]interface{} and assigns it to the MaxSupiNbr field.
func (o *EventReportingRequirement) SetMaxSupiNbr(v map[string]interface{}) {
	o.MaxSupiNbr = &v
}

// GetTimeAnaNeeded returns the TimeAnaNeeded field value if set, zero value otherwise.
func (o *EventReportingRequirement) GetTimeAnaNeeded() map[string]interface{} {
	if o == nil || o.TimeAnaNeeded == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.TimeAnaNeeded
}

// GetTimeAnaNeededOk returns a tuple with the TimeAnaNeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventReportingRequirement) GetTimeAnaNeededOk() (*map[string]interface{}, bool) {
	if o == nil || o.TimeAnaNeeded == nil {
		return nil, false
	}
	return o.TimeAnaNeeded, true
}

// HasTimeAnaNeeded returns a boolean if a field has been set.
func (o *EventReportingRequirement) HasTimeAnaNeeded() bool {
	if o != nil && o.TimeAnaNeeded != nil {
		return true
	}

	return false
}

// SetTimeAnaNeeded gets a reference to the given map[string]interface{} and assigns it to the TimeAnaNeeded field.
func (o *EventReportingRequirement) SetTimeAnaNeeded(v map[string]interface{}) {
	o.TimeAnaNeeded = &v
}

func (o EventReportingRequirement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accuracy != nil {
		toSerialize["accuracy"] = o.Accuracy
	}
	if o.StartTs != nil {
		toSerialize["startTs"] = o.StartTs
	}
	if o.EndTs != nil {
		toSerialize["endTs"] = o.EndTs
	}
	if o.SampRatio != nil {
		toSerialize["sampRatio"] = o.SampRatio
	}
	if o.MaxObjectNbr != nil {
		toSerialize["maxObjectNbr"] = o.MaxObjectNbr
	}
	if o.MaxSupiNbr != nil {
		toSerialize["maxSupiNbr"] = o.MaxSupiNbr
	}
	if o.TimeAnaNeeded != nil {
		toSerialize["timeAnaNeeded"] = o.TimeAnaNeeded
	}
	return json.Marshal(toSerialize)
}

type NullableEventReportingRequirement struct {
	value *EventReportingRequirement
	isSet bool
}

func (v NullableEventReportingRequirement) Get() *EventReportingRequirement {
	return v.value
}

func (v *NullableEventReportingRequirement) Set(val *EventReportingRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableEventReportingRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableEventReportingRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventReportingRequirement(val *EventReportingRequirement) *NullableEventReportingRequirement {
	return &NullableEventReportingRequirement{value: val, isSet: true}
}

func (v NullableEventReportingRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventReportingRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


